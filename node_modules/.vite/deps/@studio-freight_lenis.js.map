{
  "version": 3,
  "sources": ["../../@studio-freight/lenis/src/maths.js", "../../@studio-freight/lenis/src/animate.js", "../../@studio-freight/lenis/src/nanoevents.js", "../../@studio-freight/lenis/src/observed-element.js", "../../@studio-freight/lenis/src/virtual-scroll.js", "../../@studio-freight/lenis/src/index.js"],
  "sourcesContent": ["export function clamp(min, input, max) {\n  return Math.max(min, Math.min(input, max))\n}\n\nexport function truncate(value, decimals = 0) {\n  return parseFloat(value.toFixed(decimals))\n}\n\nexport function lerp(start, end, amt) {\n  return (1 - amt) * start + amt * end\n}\n\nexport function clampedModulo(dividend, divisor) {\n  let remainder = dividend % divisor\n\n  if ((divisor > 0 && remainder < 0) || (divisor < 0 && remainder > 0)) {\n    remainder += divisor\n  }\n\n  return remainder\n}\n", "import { clamp, lerp } from './maths'\n\nexport class Animate {\n  advance(deltaTime) {\n    if (!this.isRunning) return\n\n    let completed = false\n\n    if (this.lerp) {\n      this.value = lerp(this.value, this.to, this.lerp)\n      if (Math.round(this.value) === this.to) {\n        this.value = this.to\n        completed = true\n      }\n    } else {\n      this.currentTime += deltaTime\n      const linearProgress = clamp(0, this.currentTime / this.duration, 1)\n\n      completed = linearProgress >= 1\n      const easedProgress = completed ? 1 : this.easing(linearProgress)\n      this.value = this.from + (this.to - this.from) * easedProgress\n    }\n\n    this.onUpdate?.(this.value, { completed })\n\n    if (completed) {\n      this.stop()\n    }\n  }\n\n  stop() {\n    this.isRunning = false\n  }\n\n  fromTo(from, to, { lerp = 0.1, duration = 1, easing = (t) => t, onUpdate }) {\n    this.from = this.value = from\n    this.to = to\n    this.lerp = lerp\n    this.duration = duration\n    this.easing = easing\n    this.currentTime = 0\n    this.isRunning = true\n\n    this.onUpdate = onUpdate\n  }\n}\n", "export let createNanoEvents = () => ({\n  events: {},\n  emit(event, ...args) {\n    let callbacks = this.events[event] || []\n    for (let i = 0, length = callbacks.length; i < length; i++) {\n      callbacks[i](...args)\n    }\n  },\n  on(event, cb) {\n    this.events[event]?.push(cb) || (this.events[event] = [cb])\n    return () => {\n      this.events[event] = this.events[event]?.filter((i) => cb !== i)\n    }\n  },\n})\n", "export class ObservedElement {\n  constructor(element) {\n    this.element = element\n\n    if (element === window) {\n      window.addEventListener('resize', this.onWindowResize)\n      this.onWindowResize()\n    } else {\n      this.width = this.element.offsetWidth\n      this.height = this.element.offsetHeight\n\n      this.resizeObserver = new ResizeObserver(this.onResize)\n      this.resizeObserver.observe(this.element)\n    }\n  }\n\n  destroy() {\n    window.removeEventListener('resize', this.onWindowResize)\n    this.resizeObserver.disconnect()\n  }\n\n  onResize = ([entry]) => {\n    if (entry) {\n      const { width, height } = entry.contentRect\n      this.width = width\n      this.height = height\n    }\n  }\n\n  onWindowResize = () => {\n    this.width = window.innerWidth\n    this.height = window.innerHeight\n  }\n}\n", "import { clamp } from './maths'\nimport { createNanoEvents } from './nanoevents'\n\nexport class VirtualScroll {\n  constructor(\n    element,\n    { wheelMultiplier = 1, touchMultiplier = 2, normalizeWheel = false }\n  ) {\n    this.element = element\n    this.wheelMultiplier = wheelMultiplier\n    this.touchMultiplier = touchMultiplier\n    this.normalizeWheel = normalizeWheel\n\n    this.touchStart = {\n      x: null,\n      y: null,\n    }\n\n    this.emitter = createNanoEvents()\n\n    this.element.addEventListener('wheel', this.onWheel, { passive: false })\n    this.element.addEventListener('touchstart', this.onTouchStart, {\n      passive: false,\n    })\n    this.element.addEventListener('touchmove', this.onTouchMove, {\n      passive: false,\n    })\n  }\n\n  on(event, callback) {\n    return this.emitter.on(event, callback)\n  }\n\n  destroy() {\n    this.emitter.events = {}\n\n    this.element.removeEventListener('wheel', this.onWheel, {\n      passive: false,\n    })\n    this.element.removeEventListener('touchstart', this.onTouchStart, {\n      passive: false,\n    })\n    this.element.removeEventListener('touchmove', this.onTouchMove, {\n      passive: false,\n    })\n  }\n\n  onTouchStart = (event) => {\n    const { pageX, pageY } = event.targetTouches\n      ? event.targetTouches[0]\n      : event\n\n    this.touchStart.x = pageX\n    this.touchStart.y = pageY\n  }\n\n  onTouchMove = (event) => {\n    const { pageX, pageY } = event.targetTouches\n      ? event.targetTouches[0]\n      : event\n\n    const deltaX = -(pageX - this.touchStart.x) * this.touchMultiplier\n    const deltaY = -(pageY - this.touchStart.y) * this.touchMultiplier\n\n    this.touchStart.x = pageX\n    this.touchStart.y = pageY\n\n    this.emitter.emit('scroll', {\n      type: 'touch',\n      deltaX,\n      deltaY,\n      event,\n    })\n  }\n\n  onWheel = (event) => {\n    let { deltaX, deltaY } = event\n\n    if (this.normalizeWheel) {\n      deltaX = clamp(-100, deltaX, 100)\n      deltaY = clamp(-100, deltaY, 100)\n    }\n\n    deltaX *= this.wheelMultiplier\n    deltaY *= this.wheelMultiplier\n\n    this.emitter.emit('scroll', { type: 'wheel', deltaX, deltaY, event })\n  }\n}\n", "import { version } from '../package.json'\nimport { Animate } from './animate'\nimport { clamp, clampedModulo } from './maths'\nimport { createNanoEvents } from './nanoevents'\nimport { ObservedElement } from './observed-element'\nimport { VirtualScroll } from './virtual-scroll'\n\n// Technical explaination\n// - listen to 'wheel' events\n// - prevent 'wheel' event to prevent scroll\n// - normalize wheel delta\n// - add delta to targetScroll\n// - animate scroll to targetScroll (smooth context)\n// - if animation is not running, listen to 'scroll' events (native context)\n\nexport default class Lenis {\n  // isScrolling = true when scroll is animating\n  // isStopped = true if user should not be able to scroll - enable/disable programatically\n  // isSmooth = true if scroll should be animated\n  // isLocked = same as isStopped but enabled/disabled when scroll reaches target\n\n  /**\n   * @typedef {(t: number) => number} EasingFunction\n   * @typedef {'vertical' | 'horizontal'} Orientation\n   * @typedef {'vertical' | 'horizontal' | 'both'} GestureOrientation\n   *\n   * @typedef LenisOptions\n   * @property {Orientation} [direction]\n   * @property {GestureOrientation} [gestureDirection]\n   * @property {number} [mouseMultiplier]\n   * @property {boolean} [smooth]\n   *\n   * @property {Window | HTMLElement} [wrapper]\n   * @property {HTMLElement} [content]\n   * @property {boolean} [smoothWheel]\n   * @property {boolean} [smoothTouch]\n   * @property {number} [duration]\n   * @property {EasingFunction} [easing]\n   * @property {number} [lerp]\n   * @property {boolean} [infinite]\n   * @property {Orientation} [orientation]\n   * @property {GestureOrientation} [gestureOrientation]\n   * @property {number} [touchMultiplier]\n   * @property {number} [wheelMultiplier]\n   * @property {boolean} [normalizeWheel]\n   *\n   * @param {LenisOptions}\n   */\n  constructor({\n    //--legacy options--//\n    direction,\n    gestureDirection,\n    mouseMultiplier,\n    smooth,\n    //--legacy options--//\n    wrapper = window,\n    content = document.documentElement,\n    smoothWheel = smooth ?? true,\n    smoothTouch = false,\n    duration, // in seconds\n    easing = (t) => Math.min(1, 1.001 - Math.pow(2, -10 * t)),\n    lerp = duration ? null : 0.1,\n    infinite = false,\n    orientation = direction ?? 'vertical', // vertical, horizontal\n    gestureOrientation = gestureDirection ?? 'vertical', // vertical, horizontal, both\n    touchMultiplier = 2,\n    wheelMultiplier = mouseMultiplier ?? 1,\n    normalizeWheel = true,\n  } = {}) {\n    // warn about legacy options\n    if (direction) {\n      console.warn(\n        'Lenis: `direction` option is deprecated, use `orientation` instead'\n      )\n    }\n    if (gestureDirection) {\n      console.warn(\n        'Lenis: `gestureDirection` option is deprecated, use `gestureOrientation` instead'\n      )\n    }\n    if (mouseMultiplier) {\n      console.warn(\n        'Lenis: `mouseMultiplier` option is deprecated, use `wheelMultiplier` instead'\n      )\n    }\n    if (smooth) {\n      console.warn(\n        'Lenis: `smooth` option is deprecated, use `smoothWheel` instead'\n      )\n    }\n\n    window.lenisVersion = version\n\n    // if wrapper is html or body, fallback to window\n    if (wrapper === document.documentElement || wrapper === document.body) {\n      wrapper = window\n    }\n\n    this.options = {\n      wrapper,\n      content,\n      smoothWheel,\n      smoothTouch,\n      duration,\n      easing,\n      lerp,\n      infinite,\n      gestureOrientation,\n      orientation,\n      touchMultiplier,\n      wheelMultiplier,\n      normalizeWheel,\n    }\n\n    this.wrapper = new ObservedElement(wrapper)\n    this.content = new ObservedElement(content)\n\n    this.rootElement.classList.add('lenis')\n\n    this.velocity = 0\n    this.isStopped = false\n    this.isSmooth = smoothWheel || smoothTouch\n    this.isScrolling = false\n    this.targetScroll = this.animatedScroll = this.actualScroll\n    this.animate = new Animate()\n    this.emitter = createNanoEvents()\n\n    this.wrapper.element.addEventListener('scroll', this.onScroll, {\n      passive: false,\n    })\n\n    this.virtualScroll = new VirtualScroll(wrapper, {\n      touchMultiplier,\n      wheelMultiplier,\n      normalizeWheel,\n    })\n    this.virtualScroll.on('scroll', this.onVirtualScroll)\n  }\n\n  destroy() {\n    this.emitter.events = {}\n\n    this.wrapper.element.removeEventListener('scroll', this.onScroll, {\n      passive: false,\n    })\n\n    this.virtualScroll.destroy()\n  }\n\n  on(event, callback) {\n    return this.emitter.on(event, callback)\n  }\n\n  off(event, callback) {\n    this.emitter.events[event] = this.emitter.events[event]?.filter(\n      (i) => callback !== i\n    )\n  }\n\n  setScroll(scroll) {\n    // apply scroll value immediately\n    if (this.isHorizontal) {\n      this.rootElement.scrollLeft = scroll\n    } else {\n      this.rootElement.scrollTop = scroll\n    }\n  }\n\n  onVirtualScroll = ({ type, deltaX, deltaY, event }) => {\n    // keep zoom feature\n    if (event.ctrlKey) return\n\n    // keep previous/next page gesture on trackpads\n    if (\n      (this.options.gestureOrientation === 'vertical' && deltaY === 0) ||\n      (this.options.gestureOrientation === 'horizontal' && deltaX === 0)\n    )\n      return\n\n    // catch if scrolling on nested scroll elements\n    if (\n      !!event\n        .composedPath()\n        .find((node) => node?.hasAttribute?.('data-lenis-prevent'))\n    )\n      return\n\n    if (this.isStopped || this.isLocked) {\n      event.preventDefault()\n      return\n    }\n\n    this.isSmooth =\n      (this.options.smoothTouch && type === 'touch') ||\n      (this.options.smoothWheel && type === 'wheel')\n\n    if (!this.isSmooth) {\n      this.isScrolling = false\n      this.animate.stop()\n      return\n    }\n\n    event.preventDefault()\n\n    let delta = deltaY\n    if (this.options.gestureOrientation === 'both') {\n      delta = Math.abs(deltaY) > Math.abs(deltaX) ? deltaY : deltaX\n    } else if (this.options.gestureOrientation === 'horizontal') {\n      delta = deltaX\n    }\n\n    this.scrollTo(this.targetScroll + delta, { programmatic: false })\n  }\n\n  emit() {\n    this.emitter.emit('scroll', this)\n  }\n\n  onScroll = () => {\n    if (!this.isScrolling) {\n      const lastScroll = this.animatedScroll\n      this.animatedScroll = this.targetScroll = this.actualScroll\n      this.velocity = 0\n      this.direction = Math.sign(this.animatedScroll - lastScroll)\n      this.emit()\n    }\n  }\n\n  reset() {\n    this.isLocked = false\n    this.isScrolling = false\n    this.velocity = 0\n  }\n\n  start() {\n    this.isStopped = false\n\n    this.reset()\n  }\n\n  stop() {\n    this.isStopped = true\n    this.animate.stop()\n\n    this.reset()\n  }\n\n  raf(time) {\n    const deltaTime = time - (this.time || time)\n    this.time = time\n\n    this.animate.advance(deltaTime * 0.001)\n  }\n\n  scrollTo(\n    target,\n    {\n      offset = 0,\n      immediate = false,\n      lock = false,\n      duration = this.options.duration,\n      easing = this.options.easing,\n      lerp = !duration && this.options.lerp,\n      onComplete,\n      force = false, // scroll even if stopped\n      programmatic = true, // called from outside of the class\n    } = {}\n  ) {\n    if (this.isStopped && !force) return\n\n    // keywords\n    if (['top', 'left', 'start'].includes(target)) {\n      target = 0\n    } else if (['bottom', 'right', 'end'].includes(target)) {\n      target = this.limit\n    } else {\n      let node\n\n      if (typeof target === 'string') {\n        // CSS selector\n        node = document.querySelector(target)\n      } else if (target?.nodeType) {\n        // Node element\n        node = target\n      }\n\n      if (node) {\n        if (this.wrapper.element !== window) {\n          // nested scroll offset correction\n          const wrapperRect = this.wrapper.element.getBoundingClientRect()\n          offset -= this.isHorizontal ? wrapperRect.left : wrapperRect.top\n        }\n\n        const rect = node.getBoundingClientRect()\n\n        target =\n          (this.isHorizontal ? rect.left : rect.top) + this.animatedScroll\n      }\n    }\n\n    if (typeof target !== 'number') return\n\n    target += offset\n    target = Math.round(target)\n\n    if (this.options.infinite) {\n      if (programmatic) {\n        this.targetScroll = this.animatedScroll = this.scroll\n      }\n    } else {\n      target = clamp(0, target, this.limit)\n    }\n\n    if (immediate) {\n      this.animatedScroll = this.targetScroll = target\n      this.setScroll(this.scroll)\n      this.animate.stop()\n      this.reset()\n      this.emit()\n      onComplete?.()\n      return\n    }\n\n    if (!programmatic) {\n      this.targetScroll = target\n    }\n\n    this.animate.fromTo(this.animatedScroll, target, {\n      duration,\n      easing,\n      lerp,\n      onUpdate: (value, { completed }) => {\n        // started\n        if (lock) this.isLocked = true\n        this.isScrolling = true\n\n        // updated\n        this.velocity = value - this.animatedScroll\n        this.direction = Math.sign(this.velocity)\n\n        this.animatedScroll = value\n        this.setScroll(this.scroll)\n\n        if (programmatic) {\n          // wheel during programmatic should stop it\n          this.targetScroll = value\n        }\n\n        // completed\n        if (completed) {\n          if (lock) this.isLocked = false\n          requestAnimationFrame(() => {\n            //avoid double scroll event\n            this.isScrolling = false\n          })\n          this.velocity = 0\n          onComplete?.()\n        }\n\n        this.emit()\n      },\n    })\n  }\n\n  get rootElement() {\n    return this.wrapper.element === window\n      ? this.content.element\n      : this.wrapper.element\n  }\n\n  get limit() {\n    return Math.round(\n      this.isHorizontal\n        ? this.content.width - this.wrapper.width\n        : this.content.height - this.wrapper.height\n    )\n  }\n\n  get isHorizontal() {\n    return this.options.orientation === 'horizontal'\n  }\n\n  get actualScroll() {\n    // value browser takes into account\n    return this.isHorizontal\n      ? this.rootElement.scrollLeft\n      : this.rootElement.scrollTop\n  }\n\n  get scroll() {\n    return this.options.infinite\n      ? clampedModulo(this.animatedScroll, this.limit)\n      : this.animatedScroll\n  }\n\n  get progress() {\n    return this.scroll / this.limit\n  }\n\n  get isSmooth() {\n    return this.__isSmooth\n  }\n\n  set isSmooth(value) {\n    if (this.__isSmooth !== value) {\n      this.rootElement.classList.toggle('lenis-smooth', value)\n      this.__isSmooth = value\n    }\n  }\n\n  get isScrolling() {\n    return this.__isScrolling\n  }\n\n  set isScrolling(value) {\n    if (this.__isScrolling !== value) {\n      this.rootElement.classList.toggle('lenis-scrolling', value)\n      this.__isScrolling = value\n    }\n  }\n\n  get isStopped() {\n    return this.__isStopped\n  }\n\n  set isStopped(value) {\n    if (this.__isStopped !== value) {\n      this.rootElement.classList.toggle('lenis-stopped', value)\n      this.__isStopped = value\n    }\n  }\n}\n"],
  "mappings": "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",
  "names": ["clamp", "min", "input", "max", "Math", "Animate", "advance", "deltaTime", "_this$onUpdate", "this", "isRunning", "completed", "lerp", "value", "amt", "to", "round", "currentTime", "linearProgress", "duration", "easedProgress", "easing", "from", "onUpdate", "call", "stop", "fromTo", "t", "createNanoEvents", "events", "emit", "event", "args", "callbacks", "i", "length", "on", "cb", "_this$events$event", "push", "_this$events$event2", "filter", "ObservedElement", "constructor", "element", "onResize", "entry", "width", "height", "contentRect", "onWindowResize", "window", "innerWidth", "innerHeight", "addEventListener", "offsetWidth", "offsetHeight", "resizeObserver", "ResizeObserver", "observe", "destroy", "removeEventListener", "disconnect", "VirtualScroll", "wheelMultiplier", "touchMultiplier", "normalizeWheel", "onTouchStart", "pageX", "pageY", "targetTouches", "touchStart", "x", "y", "onTouchMove", "deltaX", "deltaY", "emitter", "type", "onWheel", "passive", "callback", "Lenis", "direction", "gestureDirection", "mouseMultiplier", "smooth", "wrapper", "content", "document", "documentElement", "smoothWheel", "smoothTouch", "pow", "infinite", "orientation", "gestureOrientation", "onVirtualScroll", "ctrlKey", "options", "composedPath", "find", "node", "hasAttribute", "isStopped", "isLocked", "preventDefault", "isSmooth", "isScrolling", "animate", "delta", "abs", "scrollTo", "targetScroll", "programmatic", "onScroll", "lastScroll", "animatedScroll", "actualScroll", "velocity", "sign", "console", "warn", "lenisVersion", "body", "rootElement", "classList", "add", "virtualScroll", "off", "_this$emitter$events$", "setScroll", "scroll", "isHorizontal", "scrollLeft", "scrollTop", "reset", "start", "raf", "time", "target", "offset", "immediate", "lock", "onComplete", "force", "includes", "limit", "_target", "querySelector", "nodeType", "wrapperRect", "getBoundingClientRect", "left", "top", "rect", "requestAnimationFrame", "dividend", "divisor", "remainder", "progress", "__isSmooth", "toggle", "__isScrolling", "__isStopped"]
}
